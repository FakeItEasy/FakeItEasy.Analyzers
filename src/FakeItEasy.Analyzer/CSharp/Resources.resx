<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NonVirtualSetupSpecificationDescription" xml:space="preserve">
    <value>Non-virtual members can not be intercepted.</value>
    <comment>An optional longer localizable description of the diagnostic.</comment>
  </data>
  <data name="NonVirtualSetupSpecificationMessageFormat" xml:space="preserve">
    <value>Member {0} can not be intercepted. Only interface members and virtual, overriding, and abstract members can be intercepted.</value>
    <comment>The format-able message the diagnostic displays.</comment>
  </data>
  <data name="NonVirtualSetupSpecificationTitle" xml:space="preserve">
    <value>Non-virtual setup specification</value>
    <comment>The title of the diagnostic.</comment>
  </data>
  <data name="UnusedCallSpecificationDescription" xml:space="preserve">
    <value>Call specifications should be configured or asserted.</value>
    <comment>An optional longer localizable description of the diagnostic.</comment>
  </data>
  <data name="UnusedCallSpecificationMessageFormat" xml:space="preserve">
    <value>Unused call specification '{0}'; did you forget to configure or assert the call?</value>
    <comment>The format-able message the diagnostic displays.</comment>
  </data>
  <data name="UnusedCallSpecificationTitle" xml:space="preserve">
    <value>Unused call specification</value>
    <comment>The title of the diagnostic.</comment>
  </data>
  <data name="ArgumentConstraintOutsideCallSpecDescription" xml:space="preserve">
    <value>Argument constraints can't be used outside call specifications.</value>
    <comment>An optional longer localizable description of the diagnostic.</comment>
  </data>
  <data name="ArgumentConstraintOutsideCallSpecMessageFormat" xml:space="preserve">
    <value>Argument constraint '{0}' is not valid outside a call specification.</value>
    <comment>The format-able message the diagnostic displays.</comment>
  </data>
  <data name="ArgumentConstraintOutsideCallSpecTitle" xml:space="preserve">
    <value>Argument constraint outside call specification.</value>
    <comment>The title of the diagnostic.</comment>
  </data>
  <data name="ArgumentConstraintNullabilityMismatchTitle" xml:space="preserve">
    <value>Argument constraint nullability mismatch</value>
  </data>
  <data name="ArgumentConstraintNullabilityMismatchDescription" xml:space="preserve">
    <value>A non-nullable argument constraint is used for a nullable parameter.</value>
  </data>
  <data name="ArgumentConstraintNullabilityMismatchMessageFormat" xml:space="preserve">
    <value>Parameter '{0}' of method or indexer '{1}' is nullable, but argument constraint '{2}' is not. Calls where this argument is null will not be matched.</value>
  </data>
  <data name="MakeConstraintNullableCodeFixTitle">
    <value>Change constraint type to nullable</value>
  </data>
  <data name="MakeNotNullConstraintCodeFixTitle">
    <value>Change to 'not null' constraint (IsNotNull)</value>
  </data>
</root>
